@charset "utf-8";
@use './variable' as ext;
@use 'sass:math';

@mixin baseTransition($property: all, $duration: .2s, $function: ease-in, $delay: 0s) {
  transition: $property $duration $function $delay;
}

@mixin opacityFade() {
  @media (hover: hover) and (pointer: fine) {
    @include baseTransition(opacity);
    &:hover {
      opacity: 0.7;
    }
  }
}

@mixin fullBA() {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}
// afterItem
@mixin afterItem {
  content: '';
  position: absolute;
  margin: auto;
}

// imgObCover
@mixin imgObCover($pt: 40%) {
  position: relative;
  padding-top: $pt;
  overflow: hidden;
  width: 100%;
  height: 0;
  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

// bgCCN
@mixin bgCCN($img: 'content/arrow.svg') {
  background: url(../../images/content/#{$img}) center / contain no-repeat;
}
@mixin trOp01 {
  transition: opacity 0.3s;
  @media only screen and (min-width: (ext.$bp)) {
    &:hover {
      opacity: 0.5;
    }
  }
}

//flex
@mixin flexCenter($justify: center,$align: center) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}
@mixin txtJp($weight:500) {
}
//txtEn MuseoModerno
@mixin txtEn($weight: 400) {
  font-family: "Reem Kufi Ink", sans-serif;
  font-weight: $weight;
}
@mixin txtEn02($weight:700) {
  font-family: "Reddit Sans", system-ui;
  font-weight: $weight;
}
// verticalTxt
@mixin verticalTxt($orientation: mixed,$SPorientation: horizontal-tb) {
  //mixed,upright
  text-align: left;
  //縦書き
  // -ms-writing-mode: tb-rl;
  writing-mode: vertical-rl;
  //英数字縦書き指定
  -webkit-text-orientation: $orientation;
  text-orientation: $orientation;

  @media only screen and (max-width: (ext.$bp - 1)) {
    // -ms-writing-mode: lr-tb;
    writing-mode: $SPorientation;
  }
}

//radius
@mixin baseradius01($PCradius: 12rem,$SPradius: 6rem) {
  border-radius: $PCradius;
  overflow: hidden;
  @media only screen and (max-width: (ext.$bp - 1)) {
    border-radius: $SPradius;
  }
}

//clamp　function
//最小が不要な時
//font-size: ext.clampMin(4);
@function clampMin($max: 10, $baseWidth: 1300, $unit: 0.1rem, $vw: true) {

  //vwかvh判定
  $base: math.div($max, $baseWidth);

  @if $vw == true {
    $base: $base * 100vw;
  } @else {
    $base: $base * 100vh;
  }

  //remの場合unitの値0.1掛け
  $max: $max * $unit;

  @return min($base, $max);

}

//基本
//font-size: ext.clampBase(4);
@function clampBase($min: 10, $max: 10, $baseWidth: 1920, $unit: 0.1rem, $vw: true) {

  //vwかvh判定

  $base: math.div($max, $baseWidth);

  @if $vw == true {
    $base: $base * 100vw;
  } @else {
    $base: $base * 100vh;
  }

  //remの場合unitの値0.1掛け
  $max: $max * $unit;
  $min: $min * $unit;

  @return clamp($min, $base, $max);

}

@mixin baseShadow {

  box-shadow: 0px 0px 3rem rgba(0, 0, 0, 0.15);

  @media only screen and (max-width: (ext.$bp - 1)) {

  }

}

@mixin line($color01: ext.$baseColor,$alpha01: 1.0,$translateX: -50%) {

  @include afterItem;

  top: -10rem;
  width: 2.8rem;
  height: calc(100% + 20rem);
  background: rgba($color: $color01, $alpha: $alpha01);

  left: 50%;
  transform: rotate(22.5deg) translateX($translateX);


  @media only screen and (max-width: (ext.$bp - 1)) {
    width: 1.2rem;
  }

}

@mixin lineSmall($color01: ext.$baseColor,$alpha01: 1.0,$translateX:-50%,$width:1.6rem,$spWidth: 1.2rem) {

  @include afterItem;

  top: -10rem;
  width: $width;
  height: calc(100% + 20rem);
  background: rgba($color: $color01, $alpha: $alpha01);

  left: 50%;
  transform: rotate(22.5deg) translateX($translateX);

  pointer-events: none;

  transition: .2s;

  transform-origin: left;


  @media only screen and (max-width: (ext.$bp - 1)) {
    width: $spWidth;
  }


}

@mixin lineSmalActive {

  @media only screen and (min-width: ext.$bp) {
    @media (hover: hover) and (pointer: fine) {
      width: 150%;
      pointer-events: none;
    }
  }

}


@mixin linkArrow {

  display: block;
  width: 12rem;
  height: 12rem;
  border: 1px solid ext.$baseColor;
  border-radius: 50%;
  overflow: hidden;
  background: rgba($color: #fff, $alpha: .6);
  @include flexCenter;
  position: relative;

  .arrow {
    background: url(../../images/content/content/ico_arrow01.svg) no-repeat center / contain;
    position: relative;
    z-index: 1;
    width: 3.3rem;
    height: 1.4rem;
    display: inline-block;
  }
  &::before {
    @include lineSmall;
    z-index: 0;
    width: 0;

  }


  @media only screen and (max-width: (ext.$bp - 1)) {
    width: 8rem;
    height: 8rem;
    .arrow {
      width: 2.2rem;
      height: 1.6rem;
    }
    &::before {
      width: 0;
    }
  }

}


@mixin circleSvg($fill: transparent) {

    .circleSvg {
      transform:rotate(-90deg);
      width: 16rem;
      height: 16rem;
      position: absolute;
      top: 0;
      left: 0;
      z-index: 0;
      .circle {
        stroke: #000;
        stroke-width: .3px;
        fill: $fill;
        stroke-dashoffset: 0;
        width: 100%;
        height: 100%;
      }

    @media only screen and (max-width: (ext.$bp - 1)) {
      width: 8rem;
      height: 8rem;
    }

  }


}
